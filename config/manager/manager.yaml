apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: argocd-image-updater-controller
    app.kubernetes.io/name: argocd-image-updater-system
    app.kubernetes.io/managed-by: kustomize
  name: argocd-image-updater-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater-controller
  namespace: argocd-image-updater-system
  labels:
    control-plane: argocd-image-updater-controller
    app.kubernetes.io/name: argocd-image-updater-controller
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: argocd-image-updater-controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: argocd-image-updater-controller
        app.kubernetes.io/name: argocd-image-updater
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
          - /manager
        args:
          - run
        image: argocd-image-updater-controller:latest
        name: argocd-image-updater-controller
        env:
          - name: IMAGE_UPDATER_INTERVAL
            valueFrom:
              configMapKeyRef:
                key: interval
                name: argocd-image-updater-config
                optional: true
          - name: IMAGE_UPDATER_LOGLEVEL
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: log.level
                optional: true
          - name: IMAGE_UPDATER_LOGFORMAT
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: log.format
                optional: true
          - name: MAX_CONCURRENT_APPS
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: max_concurrent_apps
                optional: true
          - name: MAX_CONCURRENT_RECONCILES
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: max_concurrent_reconciles
                optional: true
          - name: GIT_COMMIT_USER
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: git.user
                optional: true
          - name: GIT_COMMIT_EMAIL
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: git.email
                optional: true
          - name: GIT_COMMIT_SIGNING_KEY
            valueFrom:
              configMapKeyRef:
                key: git.commit-signing-key
                name: argocd-image-updater-config
                optional: true
          - name: GIT_COMMIT_SIGNING_METHOD
            valueFrom:
              configMapKeyRef:
                key: git.commit-signing-method
                name: argocd-image-updater-config
                optional: true
          - name: GIT_COMMIT_SIGN_OFF
            valueFrom:
              configMapKeyRef:
                key: git.commit-sign-off
                name: argocd-image-updater-config
                optional: true
          - name: IMAGE_UPDATER_KUBE_EVENTS
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: kube.events
                optional: true
          - name: ENABLE_WEBHOOK
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: webhook.enable
                optional: true
          - name: WEBHOOK_PORT
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: webhook.port
                optional: true
          - name: QUAY_WEBHOOK_SECRET
            valueFrom:
              secretKeyRef:
                name: argocd-image-updater-secret
                key: webhook.quay-secret
                optional: true
          - name: DOCKER_WEBHOOK_SECRET
            valueFrom:
              secretKeyRef:
                name: argocd-image-updater-secret
                key: webhook.docker-secret
                optional: true
          - name: GHCR_WEBHOOK_SECRET
            valueFrom:
              secretKeyRef:
                name: argocd-image-updater-secret
                key: webhook.ghcr-secret
                optional: true
          - name: HARBOR_WEBHOOK_SECRET
            valueFrom:
              secretKeyRef:
                name: argocd-image-updater-secret
                key: webhook.harbor-secret
                optional: true
          - name: WEBHOOK_RATELIMIT_ALLOWED
            valueFrom:
              configMapKeyRef:
                name: argocd-image-updater-config
                key: webhook.ratelimit-allowed
                optional: true
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 1024Mi
          requests:
            cpu: 250m
            memory: 512Mi
        volumeMounts:
          - mountPath: /app/config
            name: image-updater-conf
          - mountPath: /app/config/ssh
            name: ssh-known-hosts
          - mountPath: /app/.ssh
            name: ssh-config
          - mountPath: /tmp
            name: tmp
          - name: ssh-signing-key
            mountPath: /app/ssh-keys/id_rsa
            readOnly: true
            subPath: sshPrivateKey
      serviceAccountName: argocd-image-updater-controller
      terminationGracePeriodSeconds: 10
      volumes:
        - configMap:
            items:
              - key: registries.conf
                path: registries.conf
              - key: git.commit-message-template
                path: commit.template
            name: argocd-image-updater-config
            optional: true
          name: image-updater-conf
        - configMap:
            name: argocd-ssh-known-hosts-cm
            optional: true
          name: ssh-known-hosts
        - configMap:
            name: argocd-image-updater-ssh-config
            optional: true
          name: ssh-config
        - name: ssh-signing-key
          secret:
            secretName: ssh-git-creds
            optional: true
        - emptyDir: {}
          name: tmp

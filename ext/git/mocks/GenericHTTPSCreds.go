// Code generated by mockery v1.1.2. DO NOT EDIT.

package mocks

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// GenericHTTPSCreds is an autogenerated mock type for the GenericHTTPSCreds type
type GenericHTTPSCreds struct {
	mock.Mock
}

// Environ provides a mock function with given fields:
func (_m *GenericHTTPSCreds) Environ() (io.Closer, []string, error) {
	ret := _m.Called()

	var r0 io.Closer
	if rf, ok := ret.Get(0).(func() io.Closer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Closer)
		}
	}

	var r1 []string
	if rf, ok := ret.Get(1).(func() []string); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]string)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetClientCertData provides a mock function with given fields:
func (_m *GenericHTTPSCreds) GetClientCertData() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetClientCertKey provides a mock function with given fields:
func (_m *GenericHTTPSCreds) GetClientCertKey() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HasClientCert provides a mock function with given fields:
func (_m *GenericHTTPSCreds) HasClientCert() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
